-- TimeScale is microseconds/byte allowed for execution.
-- We use the largest pdf in govdocs as a reference point
--    -r--r--r-- 1 nobody 72168407 Jul 29  2005 475419.pdf
--   rounding it to 10^8

-- Thus, for an invoker that we expect to process whole file,
-- let's give it 30 minutes for a 100M file:
-- longTimeoutScale = Just (round(30*60*10^6 / 10^8)) :: Maybe TimeScale
--    i.e., Just 18
--
-- For an invoker that we don't expect to process whole file, but do a
-- fixed amount of processing, we give it  5 minutes:
-- shortTimeoutScale = Just(round(5*60*10^6 / 10^8)) :: Maybe TimeScale
--    i.e., Just 3

-- File syntax
--   any line starting with whitespace* '--' is a comment
--   the rest of the file is Haskell syntax for [Invoker], where
--
-- data Invoker' a =
--      Invoker { exec         :: [a]
--                  -- ^ list of arguments to 'exec'
--                  -- constraints:
--                  --  - not null
--                  --  - first argument must be a valid executable in PATH
--              , timeoutScale :: Maybe TimeScale
--                  -- ^ allowed microsecs/byte to process file
--                  -- Nothing means no timeout.
--              , version      :: String
--                  -- ^ identifying information re the exec
--                  -- e.g., the version number
--              , invName      :: InvokerName
--                  -- ^ a unique identifier for the invoker
--                  -- disallowed:
--                  --   ""
--                  --   "ALL"
--                  --   string containing commas
--              }


-- NOTE the absolute path to pdfinfo: ensure we get the version we've built

[ Invoker
    { exec = [ Str "/usr/local/bin/pdfinfo" , InputFile ]
    , timeoutScale = Just 3
    , version = "poppler-0.84.0"
    , invName = "pdfinfo"
    }
, Invoker
    { exec = [ Str "/usr/local/bin/pdfinfo" , Str "-meta" , InputFile ]
    , timeoutScale = Just 3
    , version = "poppler-0.84.0"
    , invName = "pdfinfo-meta"
    }
, Invoker
    { exec = [ Str "/usr/local/bin/pdfinfo" , Str "-struct" , InputFile ]
    , timeoutScale = Just 18
    , version = "poppler-0.84.0"
    , invName = "pdfinfo-struct"
    }
, Invoker
    { exec =
        [ Str "/usr/local/bin/pdftocairo"
        , Str "-pdf"
        , InputFile
        , TmpFN "pdftocairo.pdf"
        ]
    , timeoutScale = Just 18
    , version = "poppler-0.84.0"
    , invName = "pdftocairo-pdf"
    }
, Invoker
    { exec =
        [ Str "/usr/local/bin/pdftops"
        , InputFile
        , TmpFN "pdftops.ps"
        ]
    , timeoutScale = Just 18
    , version = "poppler-0.84.0"
    , invName = "pdftops"
    }
, Invoker
    { exec = [ Str "qpdf" , Str "--check" , InputFile ]
    , timeoutScale = Just 18
    , version = "8.0.2"
    , invName = "qpdf-check"
    }
, Invoker
    { exec =
        [ Str "python"
        , Str "../../pdf/lib/pdfid_v0_2_7/pdfid.py"
         -- FIXME: a bit ugly in that we have a relative path here!
        , Str "-e"
        , InputFile
        ]
    , timeoutScale = Just 18
         -- (Just 3) was timing out!
         -- this tool scans whole file
    , version = "pdfid_v0_2_7"
    , invName = "pdfid"
    }
, Invoker
    { exec = [ Str "caradoc" , Str "stats" , InputFile ]
    , timeoutScale = Just 18
    , version = "caradoc-0.3"
    , invName = "caradoc-stats"
    }
, Invoker
    { exec =
        [ Str "caradoc" , Str "stats" , Str "--strict" , InputFile ]
    , timeoutScale = Just 18
    , version = "caradoc-0.3"
    , invName = "caradoc-strict"
    }
, Invoker
    { exec =
        [ Str "mutool", Str "convert", Str "-F", Str "pdf"
        , Str "-o", TmpFN "temp.pdf"
        , InputFile
        ]
    , timeoutScale = Just 18
    , version = "mupdf-tools-1.12"
    , invName = "mutool-convert-pdf"
    }
, Invoker
    { exec =
        [ Str "mutool", Str "clean", Str "-s"
        , InputFile, TmpFN "temp.pdf"
        ]
    , timeoutScale = Just 18
    , version = "mupdf-tools-1.12"
    , invName = "mutool-clean"
    }
  ]
